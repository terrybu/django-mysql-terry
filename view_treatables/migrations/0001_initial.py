# Generated by Django 5.1.4 on 2025-01-16 21:52

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="AllFarms",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("developer", models.CharField(max_length=17)),
                (
                    "project",
                    models.CharField(db_collation="utf8_general_ci", max_length=255),
                ),
                ("msql_id", models.IntegerField()),
                (
                    "project_type",
                    models.CharField(db_collation="utf8_general_ci", max_length=10),
                ),
                (
                    "array",
                    models.CharField(db_collation="utf8_general_ci", max_length=20),
                ),
                (
                    "account_number",
                    models.CharField(db_collation="utf8_general_ci", max_length=255),
                ),
                (
                    "llc_name",
                    models.CharField(db_collation="utf8_general_ci", max_length=255),
                ),
                (
                    "address",
                    models.CharField(db_collation="utf8_general_ci", max_length=255),
                ),
                (
                    "city",
                    models.CharField(db_collation="utf8_general_ci", max_length=255),
                ),
                (
                    "state",
                    models.CharField(db_collation="utf8_general_ci", max_length=255),
                ),
                (
                    "zip",
                    models.CharField(db_collation="utf8_general_ci", max_length=255),
                ),
                (
                    "zone",
                    models.CharField(db_collation="utf8_general_ci", max_length=10),
                ),
                (
                    "utility",
                    models.CharField(db_collation="utf8_general_ci", max_length=255),
                ),
                ("pto", models.DateField(blank=True, null=True)),
                ("capacity_kwh", models.IntegerField(blank=True, null=True)),
                ("capacity_dc", models.IntegerField(blank=True, null=True)),
                (
                    "yield_field",
                    models.DecimalField(
                        blank=True,
                        db_column="yield",
                        decimal_places=2,
                        max_digits=12,
                        null=True,
                    ),
                ),
            ],
            options={
                "db_table": "all_farms",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AwsSqlReports",
            fields=[
                (
                    "msql_id",
                    models.AutoField(
                        db_column="MSQL_ID", primary_key=True, serialize=False
                    ),
                ),
                ("report", models.CharField(blank=True, max_length=255, null=True)),
                ("db", models.CharField(blank=True, max_length=255, null=True)),
                ("created_at", models.DateTimeField(blank=True, null=True)),
                ("updated_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "aws_sql_reports",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CallLog",
            fields=[
                ("developer", models.CharField(blank=True, max_length=80, null=True)),
                ("call_date", models.DateTimeField(blank=True, null=True)),
                ("phone", models.CharField(blank=True, max_length=80, null=True)),
                ("cust_id", models.IntegerField(blank=True, null=True)),
                ("account_number", models.IntegerField(blank=True, null=True)),
                ("number_contacts", models.IntegerField(blank=True, null=True)),
                ("notes", models.TextField(blank=True, null=True)),
                ("msql_id", models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                "db_table": "call_log",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Cep",
            fields=[
                (
                    "msql_id",
                    models.AutoField(
                        db_column="MSQL_ID", primary_key=True, serialize=False
                    ),
                ),
                ("cep_code", models.CharField(db_column="CEP_code", max_length=80)),
                ("partner_name", models.CharField(max_length=80)),
                ("partner_incentive", models.IntegerField(blank=True, null=True)),
                ("enrollee_incentive", models.IntegerField(blank=True, null=True)),
                ("contact_person", models.CharField(max_length=80)),
                ("phone", models.CharField(max_length=80)),
                ("email", models.CharField(max_length=80)),
                (
                    "offer_condition",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("created_at", models.DateTimeField()),
                ("updated_at", models.DateTimeField()),
            ],
            options={
                "db_table": "CEP",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CmpRate",
            fields=[
                (
                    "date_start",
                    models.DateField(blank=True, db_column="Date_Start", null=True),
                ),
                (
                    "date_end",
                    models.DateField(blank=True, db_column="Date_End", null=True),
                ),
                (
                    "rate_category",
                    models.CharField(
                        blank=True, db_column="Rate_Category", max_length=255, null=True
                    ),
                ),
                (
                    "rate",
                    models.CharField(
                        blank=True, db_column="Rate", max_length=255, null=True
                    ),
                ),
                (
                    "delivery_and_transmission",
                    models.DecimalField(
                        blank=True,
                        db_column="Delivery_and_transmission",
                        decimal_places=6,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "standard_offer",
                    models.DecimalField(
                        blank=True,
                        db_column="Standard_Offer",
                        decimal_places=6,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "full_rate",
                    models.DecimalField(
                        blank=True,
                        db_column="Full_rate",
                        decimal_places=6,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "active",
                    models.CharField(
                        blank=True, db_column="Active", max_length=255, null=True
                    ),
                ),
                ("created_at", models.DateTimeField()),
                ("updated_at", models.DateTimeField()),
                (
                    "msql_id",
                    models.AutoField(
                        db_column="MSQL_ID", primary_key=True, serialize=False
                    ),
                ),
            ],
            options={
                "db_table": "CMP_rate",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Credits",
            fields=[
                ("cust_id", models.IntegerField(blank=True, null=True)),
                ("type", models.CharField(max_length=80)),
                ("amount", models.DecimalField(decimal_places=2, max_digits=10)),
                ("balance", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "msql_id",
                    models.AutoField(
                        db_column="MSQL_ID", primary_key=True, serialize=False
                    ),
                ),
                ("uuid", models.CharField(blank=True, max_length=255, null=True)),
                ("created_at", models.DateTimeField()),
                ("updated_at", models.DateTimeField()),
            ],
            options={
                "db_table": "credits",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CreditTransactions",
            fields=[
                ("cust_id", models.IntegerField(blank=True, null=True)),
                ("invoice_id", models.IntegerField(blank=True, null=True)),
                ("credit_id", models.IntegerField(blank=True, null=True)),
                (
                    "amount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=8, null=True
                    ),
                ),
                (
                    "msql_id",
                    models.AutoField(
                        db_column="MSQL_ID", primary_key=True, serialize=False
                    ),
                ),
                ("created_at", models.DateTimeField()),
                ("updated_at", models.DateTimeField()),
            ],
            options={
                "db_table": "credit_transactions",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DeveloperDb",
            fields=[
                (
                    "msql_id",
                    models.AutoField(
                        db_column="MSQL_ID", primary_key=True, serialize=False
                    ),
                ),
                ("developer", models.CharField(blank=True, max_length=255, null=True)),
                ("db", models.CharField(blank=True, max_length=255, null=True)),
                ("created_at", models.DateTimeField(blank=True, null=True)),
                ("updated_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "developer_db",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Email2Developer",
            fields=[
                (
                    "key",
                    models.CharField(max_length=255, primary_key=True, serialize=False),
                ),
                ("developer", models.CharField(blank=True, max_length=40, null=True)),
            ],
            options={
                "db_table": "email_2_developer",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="FarmHostCreditsBeforeautomation",
            fields=[
                ("farm_prod_id", models.IntegerField(blank=True, null=True)),
                ("farm_id", models.IntegerField(blank=True, null=True)),
                ("cust_id", models.IntegerField(blank=True, null=True)),
                ("invoice_id", models.IntegerField(blank=True, null=True)),
                (
                    "year_month",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=8, null=True
                    ),
                ),
                ("serviced_by", models.CharField(blank=True, max_length=10, null=True)),
                ("account", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "premise_number",
                    models.CharField(
                        blank=True,
                        db_column="Premise_Number",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "garden_id",
                    models.CharField(
                        blank=True, db_column="Garden_ID", max_length=255, null=True
                    ),
                ),
                (
                    "tariff_rate",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=10, null=True
                    ),
                ),
                ("bill_start", models.DateField(blank=True, null=True)),
                ("bill_end", models.DateField(blank=True, null=True)),
                (
                    "cdg_kwh_applied",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "cdg_kwh",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "cdg_bill_credit",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "cdg_bill_credit_statement",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "cdg_discount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "cdg_charge",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        blank=True,
                        db_comment="C= Credit / R= Reversal\n\nFrom NYSEG - when a credit is created based on an estimated meter reading and subsequently the actual reading comes in significantly different, the credit might be reversed and re-posted.  We need to back out and adjust our billing based on this reversal and reposting of credits.",
                        max_length=10,
                        null=True,
                    ),
                ),
                ("cr_count", models.IntegerField(db_column="CR_count")),
                (
                    "monthly_bank_contribution",
                    models.DecimalField(
                        blank=True,
                        db_column="Monthly Bank Contribution",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "msql_id",
                    models.AutoField(
                        db_column="MSQL_ID", primary_key=True, serialize=False
                    ),
                ),
                ("created_at", models.DateTimeField()),
                ("updated_at", models.DateTimeField()),
            ],
            options={
                "db_table": "farm_host_credits_beforeautomation",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Farms",
            fields=[
                (
                    "msql_id",
                    models.AutoField(
                        db_column="MSQL_ID", primary_key=True, serialize=False
                    ),
                ),
                ("project", models.CharField(max_length=255)),
                ("tgc_project", models.CharField(max_length=255)),
                ("project_fund", models.CharField(max_length=80)),
                ("project_type", models.CharField(max_length=10)),
                ("array", models.CharField(max_length=20)),
                ("serviced_by", models.CharField(max_length=10)),
                ("nyseg_template", models.CharField(max_length=80)),
                ("account_number", models.CharField(max_length=255)),
                ("account_number_nyseg_report", models.CharField(max_length=255)),
                ("llc_name", models.CharField(db_column="LLC_Name", max_length=255)),
                ("address", models.CharField(max_length=255)),
                ("city", models.CharField(max_length=255)),
                ("state", models.CharField(max_length=255)),
                ("zip", models.CharField(max_length=255)),
                ("zone", models.CharField(max_length=10)),
                ("utility", models.CharField(max_length=255)),
                ("pto", models.DateField(blank=True, null=True)),
                ("interconnection_number", models.IntegerField(blank=True, null=True)),
                ("capacity_kwh", models.IntegerField(blank=True, null=True)),
                ("capacity_dc", models.IntegerField(blank=True, null=True)),
                (
                    "yield_field",
                    models.DecimalField(
                        blank=True,
                        db_column="yield",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "p50_7pct",
                    models.IntegerField(blank=True, db_column="P50-7pct", null=True),
                ),
                ("capacity_rce", models.IntegerField(blank=True, null=True)),
                (
                    "allocation",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=6, null=True
                    ),
                ),
                ("status", models.CharField(max_length=255)),
                ("date_energized", models.DateField(blank=True, null=True)),
                ("group_project_name", models.CharField(max_length=255)),
                ("group_project_name_abbrev", models.CharField(max_length=255)),
                ("name", models.CharField(max_length=255)),
                ("uuid", models.CharField(max_length=255)),
                ("garden_id", models.CharField(max_length=255)),
                ("created_at", models.DateTimeField()),
                ("updated_at", models.DateTimeField()),
            ],
            options={
                "db_table": "farms",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="FarmsCopy1",
            fields=[
                (
                    "msql_id",
                    models.AutoField(
                        db_column="MSQL_ID", primary_key=True, serialize=False
                    ),
                ),
                ("project", models.CharField(max_length=255)),
                ("tgc_project", models.CharField(max_length=255)),
                ("project_fund", models.CharField(max_length=80)),
                ("project_type", models.CharField(max_length=10)),
                ("array", models.CharField(max_length=20)),
                ("serviced_by", models.CharField(max_length=10)),
                ("nyseg_template", models.CharField(max_length=80)),
                ("account_number", models.CharField(max_length=255)),
                ("account_number_nyseg_report", models.CharField(max_length=255)),
                ("llc_name", models.CharField(db_column="LLC_Name", max_length=255)),
                ("address", models.CharField(max_length=255)),
                ("city", models.CharField(max_length=255)),
                ("state", models.CharField(max_length=255)),
                ("zip", models.CharField(max_length=255)),
                ("zone", models.CharField(max_length=10)),
                ("utility", models.CharField(max_length=255)),
                ("pto", models.DateField(blank=True, null=True)),
                ("interconnection_number", models.IntegerField(blank=True, null=True)),
                ("capacity_kwh", models.IntegerField(blank=True, null=True)),
                ("capacity_dc", models.IntegerField(blank=True, null=True)),
                (
                    "yield_field",
                    models.DecimalField(
                        blank=True,
                        db_column="yield",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "p50_7pct",
                    models.IntegerField(blank=True, db_column="P50-7pct", null=True),
                ),
                ("capacity_rce", models.IntegerField(blank=True, null=True)),
                (
                    "allocation",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=6, null=True
                    ),
                ),
                ("status", models.CharField(max_length=255)),
                ("date_energized", models.DateField(blank=True, null=True)),
                ("group_project_name", models.CharField(max_length=255)),
                ("group_project_name_abbrev", models.CharField(max_length=255)),
                ("name", models.CharField(max_length=255)),
                ("uuid", models.CharField(max_length=255)),
                ("garden_id", models.CharField(max_length=255)),
                ("created_at", models.DateTimeField()),
                ("updated_at", models.DateTimeField()),
            ],
            options={
                "db_table": "farms_copy1",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Fernando",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                "db_table": "fernando",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="FormstackConfirmation",
            fields=[
                ("msql_id", models.AutoField(primary_key=True, serialize=False)),
                ("time", models.DateTimeField(blank=True, null=True)),
                (
                    "likely_to_recomment",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                (
                    "cancellation_reason",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "other_reason",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "was_agent_informative",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "cancel_enrollment",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                (
                    "how_to_improve",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("fname", models.CharField(blank=True, max_length=80, null=True)),
                ("lname", models.CharField(blank=True, max_length=80, null=True)),
                ("email", models.CharField(blank=True, max_length=80, null=True)),
                ("phone", models.CharField(blank=True, max_length=20, null=True)),
                ("address", models.CharField(blank=True, max_length=80, null=True)),
                ("city", models.CharField(blank=True, max_length=80, null=True)),
                ("state", models.CharField(blank=True, max_length=2, null=True)),
                ("zip", models.CharField(blank=True, max_length=5, null=True)),
                ("unique_id", models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "formstack_confirmation",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="FtFields",
            fields=[
                ("field_id", models.AutoField(primary_key=True, serialize=False)),
                ("ft_field_id", models.PositiveIntegerField()),
                ("ft_field_name", models.CharField(max_length=255)),
            ],
            options={
                "db_table": "ft_fields",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="FtForms",
            fields=[
                ("form_id", models.AutoField(primary_key=True, serialize=False)),
                ("ft_form_id", models.PositiveIntegerField(unique=True)),
                ("form_name", models.CharField(max_length=255)),
                ("developer", models.CharField(max_length=255)),
                ("last_update_date", models.DateTimeField()),
                ("active", models.PositiveIntegerField()),
            ],
            options={
                "db_table": "ft_forms",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="FtSubmissionData",
            fields=[
                (
                    "submission_data_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("ft_submission_id", models.IntegerField()),
                ("ft_field_id", models.IntegerField()),
                ("ft_field_value", models.CharField(max_length=255)),
            ],
            options={
                "db_table": "ft_submission_data",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="FtSubmissionHeaders",
            fields=[
                (
                    "submission_header_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("ft_submission_id", models.PositiveIntegerField(unique=True)),
                ("ft_submission_latitude", models.CharField(max_length=255)),
                ("ft_submission_longitude", models.CharField(max_length=255)),
                ("ft_submission_remote_addr", models.CharField(max_length=15)),
                ("ft_submission_timestamp", models.DateTimeField()),
                ("ft_submission_user_agent", models.CharField(max_length=255)),
            ],
            options={
                "db_table": "ft_submission_headers",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="GcSentMstrsfnytest",
            fields=[
                (
                    "msql_id",
                    models.AutoField(
                        db_column="MSQL_ID", primary_key=True, serialize=False
                    ),
                ),
                ("cust_id", models.IntegerField(blank=True, null=True)),
                (
                    "date_processed",
                    models.DateField(blank=True, db_column="Date_Processed", null=True),
                ),
                (
                    "date_submitted",
                    models.DateField(blank=True, db_column="Date_Submitted", null=True),
                ),
                (
                    "date_shipped",
                    models.DateField(blank=True, db_column="Date_Shipped", null=True),
                ),
                (
                    "type",
                    models.CharField(
                        blank=True, db_column="Type", max_length=255, null=True
                    ),
                ),
                (
                    "invoice_number",
                    models.CharField(
                        blank=True,
                        db_column="Invoice_Number",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "vendor",
                    models.CharField(
                        blank=True, db_column="Vendor", max_length=255, null=True
                    ),
                ),
                (
                    "gc_type",
                    models.CharField(
                        blank=True, db_column="GC_type", max_length=255, null=True
                    ),
                ),
                (
                    "submission_id_for_change_of_info_form",
                    models.CharField(
                        blank=True,
                        db_column="Submission_ID_for_Change_of_Info_Form",
                        max_length=255,
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField()),
                ("updated_at", models.DateTimeField()),
            ],
            options={
                "db_table": "GC_sent_MSTRSFNYtest",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="GcSentMstrtest",
            fields=[
                (
                    "msql_id",
                    models.AutoField(
                        db_column="MSQL_ID", primary_key=True, serialize=False
                    ),
                ),
                ("cust_id", models.IntegerField(blank=True, null=True)),
                (
                    "date_processed",
                    models.DateField(blank=True, db_column="Date_Processed", null=True),
                ),
                (
                    "date_submitted",
                    models.DateField(blank=True, db_column="Date_Submitted", null=True),
                ),
                (
                    "date_shipped",
                    models.DateField(blank=True, db_column="Date_Shipped", null=True),
                ),
                (
                    "type",
                    models.CharField(
                        blank=True, db_column="Type", max_length=255, null=True
                    ),
                ),
                (
                    "invoice_number",
                    models.CharField(
                        blank=True,
                        db_column="Invoice_Number",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "vendor",
                    models.CharField(
                        blank=True, db_column="Vendor", max_length=255, null=True
                    ),
                ),
                (
                    "gc_type",
                    models.CharField(
                        blank=True, db_column="GC_type", max_length=255, null=True
                    ),
                ),
                (
                    "submission_id_for_change_of_info_form",
                    models.CharField(
                        blank=True,
                        db_column="Submission_ID_for_Change_of_Info_Form",
                        max_length=255,
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField()),
                ("updated_at", models.DateTimeField()),
            ],
            options={
                "db_table": "GC_sent_MSTRtest",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="HsCountTemp",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "developer",
                    models.CharField(db_collation="utf8_general_ci", max_length=261),
                ),
                (
                    "cust_id",
                    models.CharField(db_collation="utf8_general_ci", max_length=273),
                ),
                (
                    "fname",
                    models.CharField(
                        db_collation="utf8_general_ci",
                        db_column="FNAME",
                        max_length=255,
                    ),
                ),
                (
                    "lname",
                    models.CharField(
                        db_collation="utf8_general_ci",
                        db_column="LNAME",
                        max_length=255,
                    ),
                ),
                (
                    "service_address",
                    models.CharField(
                        db_collation="utf8_general_ci",
                        db_column="Service Address",
                        max_length=255,
                    ),
                ),
                (
                    "service_address_2",
                    models.CharField(
                        db_collation="utf8_general_ci",
                        db_column="Service Address 2",
                        max_length=255,
                    ),
                ),
                (
                    "service_city",
                    models.CharField(
                        db_collation="utf8_general_ci",
                        db_column="Service City",
                        max_length=255,
                    ),
                ),
                (
                    "service_state",
                    models.CharField(
                        db_collation="utf8_general_ci",
                        db_column="Service State",
                        max_length=255,
                    ),
                ),
                (
                    "service_zip",
                    models.CharField(
                        db_collation="utf8_general_ci",
                        db_column="Service Zip",
                        max_length=255,
                    ),
                ),
                (
                    "bill_address",
                    models.CharField(
                        db_collation="utf8_general_ci",
                        db_column="Bill Address",
                        max_length=255,
                    ),
                ),
                (
                    "billing_address_2",
                    models.CharField(db_collation="utf8_general_ci", max_length=255),
                ),
                (
                    "bill_city",
                    models.CharField(
                        db_collation="utf8_general_ci",
                        db_column="Bill City",
                        max_length=255,
                    ),
                ),
                (
                    "bill_state",
                    models.CharField(
                        db_collation="utf8_general_ci",
                        db_column="Bill State",
                        max_length=255,
                    ),
                ),
                (
                    "bill_zip",
                    models.CharField(
                        db_collation="utf8_general_ci",
                        db_column="Bill Zip",
                        max_length=255,
                    ),
                ),
                (
                    "email",
                    models.CharField(
                        db_collation="utf8_general_ci",
                        db_column="Email",
                        max_length=255,
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        db_collation="utf8_general_ci",
                        db_column="Phone",
                        max_length=255,
                    ),
                ),
                (
                    "phone_type",
                    models.CharField(
                        db_collation="utf8_general_ci",
                        db_column="Phone Type",
                        max_length=255,
                    ),
                ),
                (
                    "utility",
                    models.CharField(
                        db_collation="utf8_general_ci",
                        db_column="Utility",
                        max_length=255,
                    ),
                ),
                (
                    "account_number",
                    models.CharField(
                        db_collation="utf8_general_ci",
                        db_column="Account Number",
                        max_length=255,
                    ),
                ),
                ("current_farm_id", models.IntegerField(blank=True, null=True)),
                (
                    "farm_name",
                    models.CharField(
                        blank=True,
                        db_collation="utf8_general_ci",
                        db_column="Farm Name",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "allocation_status",
                    models.CharField(db_collation="utf8_general_ci", max_length=20),
                ),
                (
                    "cancel_date",
                    models.DateField(blank=True, db_column="Cancel Date", null=True),
                ),
                (
                    "balance_due",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=32, null=True
                    ),
                ),
                (
                    "balance_status",
                    models.CharField(
                        blank=True, db_column="Balance Status", max_length=48, null=True
                    ),
                ),
                (
                    "stripe_id",
                    models.CharField(
                        blank=True,
                        db_collation="utf8_general_ci",
                        db_column="Stripe ID",
                        max_length=80,
                        null=True,
                    ),
                ),
                (
                    "url_account",
                    models.CharField(
                        blank=True,
                        db_collation="utf8_general_ci",
                        max_length=306,
                        null=True,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(blank=True, db_column="Created At", null=True),
                ),
                (
                    "modified_at",
                    models.CharField(
                        blank=True, db_column="Modified At", max_length=19, null=True
                    ),
                ),
                (
                    "serviced_by",
                    models.CharField(
                        blank=True,
                        db_collation="utf8_general_ci",
                        db_column="Serviced By",
                        max_length=10,
                        null=True,
                    ),
                ),
                (
                    "cancel_type",
                    models.CharField(
                        db_collation="utf8_general_ci",
                        db_column="Cancel Type",
                        max_length=255,
                    ),
                ),
                (
                    "payment_type",
                    models.CharField(
                        db_collation="utf8_general_ci",
                        db_column="Payment Type",
                        max_length=255,
                    ),
                ),
                (
                    "plan_discount",
                    models.CharField(
                        db_collation="utf8_general_ci",
                        db_column="Plan Discount",
                        max_length=255,
                    ),
                ),
                (
                    "payment_status",
                    models.CharField(
                        blank=True, db_column="Payment Status", max_length=4, null=True
                    ),
                ),
                (
                    "payment_failed_message",
                    models.CharField(
                        blank=True,
                        db_collation="utf8_general_ci",
                        db_column="Payment Failed Message",
                        max_length=80,
                        null=True,
                    ),
                ),
                (
                    "lmi_status",
                    models.CharField(
                        blank=True,
                        db_collation="utf8_general_ci",
                        db_column="LMI Status",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "enrollment_id",
                    models.CharField(
                        db_collation="utf8_general_ci",
                        db_column="Enrollment ID",
                        max_length=255,
                    ),
                ),
                (
                    "enrollment_date",
                    models.DateField(
                        blank=True, db_column="Enrollment Date", null=True
                    ),
                ),
                (
                    "referral",
                    models.CharField(
                        db_collation="utf8_general_ci",
                        db_column="Referral",
                        max_length=255,
                    ),
                ),
                (
                    "last_amount_paid",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=30, null=True
                    ),
                ),
                ("last_payment_date", models.DateField(blank=True, null=True)),
                (
                    "payment_confirmation_number",
                    models.CharField(blank=True, max_length=22, null=True),
                ),
                (
                    "account_status",
                    models.CharField(blank=True, max_length=124, null=True),
                ),
                (
                    "bill_credit",
                    models.FloatField(blank=True, db_column="Bill Credit", null=True),
                ),
                (
                    "first_allocation_date",
                    models.DateField(
                        blank=True, db_column="First Allocation Date", null=True
                    ),
                ),
                (
                    "cancel_reason",
                    models.CharField(
                        db_collation="utf8_general_ci",
                        db_column="Cancel Reason",
                        max_length=255,
                    ),
                ),
                (
                    "cancel_source",
                    models.CharField(
                        db_collation="utf8_general_ci",
                        db_column="Cancel Source",
                        max_length=20,
                    ),
                ),
                (
                    "scored",
                    models.CharField(
                        db_collation="utf8_general_ci",
                        db_column="Scored",
                        max_length=255,
                    ),
                ),
                ("fico", models.IntegerField(blank=True, db_column="FICO", null=True)),
                (
                    "dealname",
                    models.CharField(
                        blank=True,
                        db_collation="utf8_general_ci",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "subscription_type",
                    models.CharField(db_collation="utf8_general_ci", max_length=255),
                ),
                ("enrollment_stage", models.CharField(max_length=16)),
                ("kwh", models.IntegerField(blank=True, null=True)),
                (
                    "kw",
                    models.DecimalField(
                        blank=True,
                        db_column="KW",
                        decimal_places=4,
                        max_digits=14,
                        null=True,
                    ),
                ),
                (
                    "rate_class",
                    models.CharField(
                        blank=True,
                        db_collation="utf8_general_ci",
                        max_length=80,
                        null=True,
                    ),
                ),
                (
                    "debtor_number",
                    models.CharField(db_collation="utf8_general_ci", max_length=255),
                ),
                (
                    "premise_number",
                    models.CharField(db_collation="utf8_general_ci", max_length=255),
                ),
                (
                    "dg_customer",
                    models.CharField(
                        blank=True,
                        db_collation="utf8_general_ci",
                        db_column="DG Customer",
                        max_length=3,
                        null=True,
                    ),
                ),
                (
                    "member_id",
                    models.IntegerField(blank=True, db_column="Member ID", null=True),
                ),
                (
                    "company",
                    models.CharField(
                        db_collation="utf8_general_ci",
                        db_column="Company",
                        max_length=255,
                    ),
                ),
            ],
            options={
                "db_table": "hs_count_temp",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="HubspotEmailEvents",
            fields=[
                (
                    "msql_id",
                    models.AutoField(
                        db_column="MSQL_ID", primary_key=True, serialize=False
                    ),
                ),
                ("type", models.CharField(max_length=255)),
                ("recipient", models.CharField(max_length=255)),
                ("created", models.DateTimeField()),
                ("emailid", models.IntegerField()),
                ("eventid", models.CharField(blank=True, max_length=255, null=True)),
                ("id", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "appname",
                    models.CharField(
                        blank=True, db_column="appName", max_length=255, null=True
                    ),
                ),
                ("attempt", models.CharField(blank=True, max_length=255, null=True)),
                ("response", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "linkid",
                    models.CharField(
                        blank=True, db_column="linkId", max_length=255, null=True
                    ),
                ),
                ("url", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "dropmessage",
                    models.CharField(
                        blank=True, db_column="dropMessage", max_length=255, null=True
                    ),
                ),
                (
                    "dropreason",
                    models.CharField(
                        blank=True, db_column="dropReason", max_length=255, null=True
                    ),
                ),
                ("category", models.CharField(blank=True, max_length=255, null=True)),
                ("status", models.CharField(blank=True, max_length=255, null=True)),
                ("source", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "subscriptions",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "portalsubscriptionstatus",
                    models.CharField(
                        blank=True,
                        db_column="portalSubscriptionStatus",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "sourceid",
                    models.CharField(
                        blank=True, db_column="sourceId", max_length=255, null=True
                    ),
                ),
                ("subject", models.CharField(blank=True, max_length=255, null=True)),
                ("cc", models.CharField(blank=True, max_length=255, null=True)),
                ("bcc", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "replyto",
                    models.CharField(
                        blank=True, db_column="replyTo", max_length=255, null=True
                    ),
                ),
                (
                    "from_field",
                    models.CharField(
                        blank=True, db_column="from", max_length=255, null=True
                    ),
                ),
                (
                    "suppressedmessage",
                    models.CharField(
                        blank=True,
                        db_column="suppressedMessage",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "suppressedreason",
                    models.CharField(
                        blank=True,
                        db_column="suppressedReason",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "devicetype",
                    models.CharField(
                        blank=True, db_column="deviceType", max_length=255, null=True
                    ),
                ),
                (
                    "useragent",
                    models.CharField(
                        blank=True, db_column="userAgent", max_length=255, null=True
                    ),
                ),
                (
                    "browser_name",
                    models.CharField(
                        blank=True, db_column="browser.name", max_length=255, null=True
                    ),
                ),
                (
                    "browser_family",
                    models.CharField(
                        blank=True,
                        db_column="browser.family",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "browser_producer",
                    models.CharField(
                        blank=True,
                        db_column="browser.producer",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "browser_producerurl",
                    models.CharField(
                        blank=True,
                        db_column="browser.producerUrl",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "browser_type",
                    models.CharField(
                        blank=True, db_column="browser.type", max_length=255, null=True
                    ),
                ),
                (
                    "browser_url",
                    models.CharField(
                        blank=True, db_column="browser.url", max_length=255, null=True
                    ),
                ),
                (
                    "sentby_created",
                    models.DateTimeField(
                        blank=True, db_column="sentBy.created", null=True
                    ),
                ),
                ("created_at", models.DateTimeField()),
                ("updated_at", models.DateTimeField()),
            ],
            options={
                "db_table": "hubspot_email_events",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="HubspotEmailEventsCopy1",
            fields=[
                (
                    "msql_id",
                    models.AutoField(
                        db_column="MSQL_ID", primary_key=True, serialize=False
                    ),
                ),
                ("type", models.CharField(max_length=255)),
                ("recipient", models.CharField(max_length=255)),
                ("created", models.DateTimeField()),
                ("emailid", models.IntegerField()),
                ("eventid", models.CharField(blank=True, max_length=255, null=True)),
                ("id", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "appname",
                    models.CharField(
                        blank=True, db_column="appName", max_length=255, null=True
                    ),
                ),
                ("attempt", models.CharField(blank=True, max_length=255, null=True)),
                ("response", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "linkid",
                    models.CharField(
                        blank=True, db_column="linkId", max_length=255, null=True
                    ),
                ),
                ("url", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "dropmessage",
                    models.CharField(
                        blank=True, db_column="dropMessage", max_length=255, null=True
                    ),
                ),
                (
                    "dropreason",
                    models.CharField(
                        blank=True, db_column="dropReason", max_length=255, null=True
                    ),
                ),
                ("category", models.CharField(blank=True, max_length=255, null=True)),
                ("status", models.CharField(blank=True, max_length=255, null=True)),
                ("source", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "subscriptions",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "portalsubscriptionstatus",
                    models.CharField(
                        blank=True,
                        db_column="portalSubscriptionStatus",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "sourceid",
                    models.CharField(
                        blank=True, db_column="sourceId", max_length=255, null=True
                    ),
                ),
                ("subject", models.CharField(blank=True, max_length=255, null=True)),
                ("cc", models.CharField(blank=True, max_length=255, null=True)),
                ("bcc", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "replyto",
                    models.CharField(
                        blank=True, db_column="replyTo", max_length=255, null=True
                    ),
                ),
                (
                    "from_field",
                    models.CharField(
                        blank=True, db_column="from", max_length=255, null=True
                    ),
                ),
                (
                    "suppressedmessage",
                    models.CharField(
                        blank=True,
                        db_column="suppressedMessage",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "suppressedreason",
                    models.CharField(
                        blank=True,
                        db_column="suppressedReason",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "devicetype",
                    models.CharField(
                        blank=True, db_column="deviceType", max_length=255, null=True
                    ),
                ),
                (
                    "useragent",
                    models.CharField(
                        blank=True, db_column="userAgent", max_length=255, null=True
                    ),
                ),
                (
                    "browser_name",
                    models.CharField(
                        blank=True, db_column="browser.name", max_length=255, null=True
                    ),
                ),
                (
                    "browser_family",
                    models.CharField(
                        blank=True,
                        db_column="browser.family",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "browser_producer",
                    models.CharField(
                        blank=True,
                        db_column="browser.producer",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "browser_producerurl",
                    models.CharField(
                        blank=True,
                        db_column="browser.producerUrl",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "browser_type",
                    models.CharField(
                        blank=True, db_column="browser.type", max_length=255, null=True
                    ),
                ),
                (
                    "browser_url",
                    models.CharField(
                        blank=True, db_column="browser.url", max_length=255, null=True
                    ),
                ),
                (
                    "sentby_created",
                    models.DateTimeField(
                        blank=True, db_column="sentBy.created", null=True
                    ),
                ),
                ("created_at", models.DateTimeField()),
                ("updated_at", models.DateTimeField()),
            ],
            options={
                "db_table": "hubspot_email_events_copy1",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="HubspotEmailId",
            fields=[
                (
                    "msql_id",
                    models.AutoField(
                        db_column="MSQL_ID", primary_key=True, serialize=False
                    ),
                ),
                (
                    "invoice_name",
                    models.CharField(
                        blank=True, db_column="Invoice_name", max_length=255, null=True
                    ),
                ),
                (
                    "invoice_id",
                    models.CharField(
                        blank=True, db_column="Invoice_id", max_length=255, null=True
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, null=True)),
                ("updated_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "hubspot_email_id",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="HubspotEmailStatistics",
            fields=[
                (
                    "msql_id",
                    models.AutoField(
                        db_column="MSQL_ID", primary_key=True, serialize=False
                    ),
                ),
                ("created", models.DateTimeField(blank=True, null=True)),
                (
                    "id",
                    models.CharField(
                        blank=True, max_length=255, null=True, unique=True
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "fromname",
                    models.CharField(
                        blank=True, db_column="FromName", max_length=255, null=True
                    ),
                ),
                ("replyto", models.CharField(blank=True, max_length=255, null=True)),
                ("updated_at", models.DateTimeField()),
                ("created_at", models.DateTimeField()),
            ],
            options={
                "db_table": "hubspot_email_statistics",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="HubspotNotesEmails",
            fields=[
                (
                    "msql_id",
                    models.AutoField(
                        db_column="MSQL_ID", primary_key=True, serialize=False
                    ),
                ),
                (
                    "engagement_createdat",
                    models.DateTimeField(
                        blank=True, db_column="engagement.createdAt", null=True
                    ),
                ),
                (
                    "engagement_lastupdated",
                    models.DateTimeField(
                        blank=True, db_column="engagement.lastUpdated", null=True
                    ),
                ),
                (
                    "engagement_modifiedby",
                    models.CharField(
                        blank=True,
                        db_column="engagement.modifiedBy",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "engagement_id",
                    models.CharField(
                        db_column="engagement.id", max_length=255, unique=True
                    ),
                ),
                (
                    "engagement_type",
                    models.CharField(
                        blank=True,
                        db_column="engagement.type",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "engagement_bodypreview",
                    models.TextField(
                        blank=True, db_column="engagement.bodyPreview", null=True
                    ),
                ),
                (
                    "associations_contactids",
                    models.CharField(
                        blank=True,
                        db_column="associations.contactIds",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "customer_email",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("developer", models.CharField(blank=True, max_length=255, null=True)),
                ("rep_email", models.CharField(blank=True, max_length=255, null=True)),
                ("created_at", models.DateTimeField()),
                ("updated_at", models.DateTimeField()),
            ],
            options={
                "db_table": "hubspot_notes_emails",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="HubspotPropertiesMapping",
            fields=[
                (
                    "msql_id",
                    models.AutoField(
                        db_column="MSQL_ID", primary_key=True, serialize=False
                    ),
                ),
                (
                    "hs_list_name",
                    models.CharField(
                        blank=True, db_column="hs_List_Name", max_length=255, null=True
                    ),
                ),
                (
                    "datafile_field",
                    models.CharField(
                        blank=True,
                        db_column="Datafile_field",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "hs_properties_field",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
            ],
            options={
                "db_table": "hubspot_properties_mapping",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Invoices",
            fields=[
                ("cust_id", models.IntegerField(blank=True, null=True)),
                ("farm_id", models.IntegerField(blank=True, null=True)),
                ("farm_type", models.CharField(max_length=10)),
                ("inv_number", models.CharField(blank=True, max_length=15, null=True)),
                ("inv_date", models.DateField(blank=True, null=True)),
                ("inv_due_date", models.DateField(blank=True, null=True)),
                (
                    "year_month",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("plan", models.CharField(max_length=255)),
                ("cap_rate", models.IntegerField(blank=True, null=True)),
                ("cdg_kwh_applied", models.IntegerField(blank=True, null=True)),
                (
                    "cdg_credit",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "plan_discount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "bill_amount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "credit_applied",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "amount_due",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "payments_applied",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                ("interest", models.DecimalField(decimal_places=2, max_digits=10)),
                ("write_off", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "balance_due",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("payment_method", models.CharField(max_length=80)),
                ("payment_status", models.CharField(max_length=80)),
                ("payment_status_date", models.DateField(blank=True, null=True)),
                ("paid_in_full_date", models.DateField(blank=True, null=True)),
                (
                    "statement_pmt_thru_date",
                    models.DateField(
                        blank=True,
                        db_comment="Calculate previous Balance and Payments applied through this date.\n\nShould be set to the day before the merge is actually run.\n",
                        null=True,
                    ),
                ),
                ("autopay_date", models.DateField(blank=True, null=True)),
                ("autopay_hold", models.IntegerField()),
                ("autopay_note", models.CharField(max_length=255)),
                (
                    "msql_id",
                    models.AutoField(
                        db_column="MSQL_ID", primary_key=True, serialize=False
                    ),
                ),
                ("uuid", models.CharField(max_length=255)),
                ("created_at", models.DateTimeField()),
                ("updated_at", models.DateTimeField()),
            ],
            options={
                "db_table": "invoices",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="InvoicesBeforeautomation",
            fields=[
                ("cust_id", models.IntegerField(blank=True, null=True)),
                ("farm_id", models.IntegerField(blank=True, null=True)),
                ("farm_type", models.CharField(max_length=10)),
                ("inv_number", models.CharField(blank=True, max_length=15, null=True)),
                ("inv_date", models.DateField(blank=True, null=True)),
                ("inv_due_date", models.DateField(blank=True, null=True)),
                (
                    "year_month",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("plan", models.CharField(max_length=255)),
                ("cap_rate", models.IntegerField(blank=True, null=True)),
                ("cdg_kwh_applied", models.IntegerField(blank=True, null=True)),
                (
                    "cdg_credit",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "plan_discount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "bill_amount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "credit_applied",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "amount_due",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "payments_applied",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                ("interest", models.DecimalField(decimal_places=2, max_digits=10)),
                ("write_off", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "balance_due",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("payment_method", models.CharField(max_length=80)),
                ("payment_status", models.CharField(max_length=80)),
                ("payment_status_date", models.DateField(blank=True, null=True)),
                ("paid_in_full_date", models.DateField(blank=True, null=True)),
                (
                    "statement_pmt_thru_date",
                    models.DateField(
                        blank=True,
                        db_comment="Calculate previous Balance and Payments applied through this date.\n\nShould be set to the day before the merge is actually run.\n",
                        null=True,
                    ),
                ),
                ("autopay_date", models.DateField(blank=True, null=True)),
                ("autopay_hold", models.IntegerField()),
                ("autopay_note", models.CharField(max_length=255)),
                (
                    "msql_id",
                    models.AutoField(
                        db_column="MSQL_ID", primary_key=True, serialize=False
                    ),
                ),
                ("uuid", models.CharField(max_length=255)),
                ("created_at", models.DateTimeField()),
                ("updated_at", models.DateTimeField()),
            ],
            options={
                "db_table": "invoices_beforeautomation",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LmiStatustest",
            fields=[
                (
                    "msql_id",
                    models.AutoField(
                        db_column="MSQL_ID", primary_key=True, serialize=False
                    ),
                ),
                ("cust_id", models.IntegerField(blank=True, null=True)),
                (
                    "cust_account_number",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "cust_enrollment_id",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "number_4506_t_submitted",
                    models.DateField(
                        blank=True, db_column="4506-T_submitted", null=True
                    ),
                ),
                ("transcript_received", models.DateField(blank=True, null=True)),
                (
                    "census_blkgrp_geoid",
                    models.CharField(blank=True, max_length=80, null=True),
                ),
                (
                    "pct_lmi_census_blkgrp",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=8, null=True
                    ),
                ),
                (
                    "lmi_status",
                    models.CharField(
                        blank=True, db_column="LMI_status", max_length=255, null=True
                    ),
                ),
                (
                    "lmi_category",
                    models.CharField(
                        blank=True, db_column="LMI_category", max_length=255, null=True
                    ),
                ),
                (
                    "lmi_decision",
                    models.CharField(
                        blank=True, db_column="LMI_decision", max_length=255, null=True
                    ),
                ),
                (
                    "payment_assistance",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "housing_assistance",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "lmi_status_date",
                    models.DateField(
                        blank=True, db_column="LMI_status_date", null=True
                    ),
                ),
                (
                    "communication_language",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "enroll_form",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("created_at", models.DateTimeField()),
                ("updated_at", models.DateTimeField()),
            ],
            options={
                "db_table": "LMI_statustest",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MemberApiA",
            fields=[
                ("cust_id", models.IntegerField(blank=True, null=True)),
                ("utility_account", models.CharField(max_length=80)),
                ("farm_id", models.IntegerField(blank=True, null=True)),
                ("processor", models.CharField(max_length=80)),
                ("name_on_account", models.CharField(max_length=80)),
                ("account_type", models.CharField(max_length=80)),
                (
                    "business_personal",
                    models.CharField(db_column="Business_Personal", max_length=10),
                ),
                ("bank_name", models.CharField(max_length=80)),
                ("routing_number", models.TextField(blank=True, null=True)),
                ("routing_last4", models.CharField(max_length=80)),
                ("account_number", models.TextField(blank=True, null=True)),
                ("account_last4", models.CharField(max_length=80)),
                ("payment_status", models.CharField(max_length=80)),
                ("status_details", models.CharField(max_length=80)),
                ("stripe_cust_id", models.CharField(max_length=80)),
                ("stripe_pmt_id", models.CharField(max_length=80)),
                ("stripe_account_status", models.CharField(max_length=80)),
                (
                    "msql_id",
                    models.AutoField(
                        db_column="MSQL_ID", primary_key=True, serialize=False
                    ),
                ),
                ("created_at", models.DateTimeField()),
                ("updated_at", models.DateTimeField()),
            ],
            options={
                "db_table": "member_api_a",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MemberApiS",
            fields=[
                ("cust_id", models.IntegerField(blank=True, null=True)),
                ("farm_id", models.IntegerField(blank=True, null=True)),
                ("processor", models.CharField(max_length=80)),
                ("stripe_cust_id", models.CharField(max_length=80)),
                ("stripe_card_id", models.CharField(max_length=80)),
                ("stripe_connected_cust_id", models.CharField(max_length=80)),
                ("stripe_connected_card_id", models.CharField(max_length=80)),
                ("card_funding", models.CharField(max_length=80)),
                ("card_brand", models.CharField(max_length=80)),
                ("card_last4", models.CharField(max_length=10)),
                ("card_exp_year", models.SmallIntegerField(blank=True, null=True)),
                ("card_exp_month", models.SmallIntegerField(blank=True, null=True)),
                (
                    "card_exp_year_month",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=6, null=True
                    ),
                ),
                ("payment_status", models.CharField(max_length=80)),
                ("status_details", models.CharField(max_length=80)),
                (
                    "msql_id",
                    models.AutoField(
                        db_column="MSQL_ID", primary_key=True, serialize=False
                    ),
                ),
                ("created_at", models.DateTimeField()),
                ("updated_at", models.DateTimeField()),
            ],
            options={
                "db_table": "member_api_s",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Members",
            fields=[
                ("cust_id", models.IntegerField(blank=True, null=True)),
                ("first_name", models.CharField(max_length=80)),
                ("last_name", models.CharField(max_length=80)),
                ("company", models.CharField(max_length=80)),
                ("address_1", models.CharField(max_length=80)),
                ("address_2", models.CharField(max_length=80)),
                ("city", models.CharField(max_length=40)),
                ("state", models.CharField(max_length=2)),
                ("zip", models.CharField(max_length=10)),
                ("email", models.CharField(max_length=255)),
                ("email_status", models.CharField(max_length=20)),
                ("phone_1", models.CharField(max_length=20)),
                ("phone_1_type", models.CharField(max_length=20)),
                ("phone_2", models.CharField(max_length=20)),
                ("phone_2_type", models.CharField(max_length=20)),
                ("same_for_all_accounts", models.IntegerField()),
                ("paperless", models.IntegerField()),
                ("communication_pref", models.CharField(max_length=20)),
                ("user_id", models.IntegerField(blank=True, null=True)),
                ("dg_customer", models.CharField(blank=True, max_length=3, null=True)),
                (
                    "msql_id",
                    models.AutoField(
                        db_column="MSQL_ID", primary_key=True, serialize=False
                    ),
                ),
                ("uuid", models.CharField(max_length=80)),
                ("created_at", models.DateTimeField()),
                ("updated_at", models.DateTimeField()),
            ],
            options={
                "db_table": "members",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MonthYearTrans",
            fields=[
                (
                    "month_allocation",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=6, null=True
                    ),
                ),
                (
                    "month_allocationplusone",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=6, null=True
                    ),
                ),
                (
                    "month_allocationplustwo",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=6, null=True
                    ),
                ),
                (
                    "month_allocationminusone",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=6, null=True
                    ),
                ),
                (
                    "msql_id",
                    models.AutoField(
                        db_column="MSQL_ID", primary_key=True, serialize=False
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, null=True)),
                ("updated_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "month_year_trans",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MstrCustlist",
            fields=[
                (
                    "msql_id",
                    models.AutoField(
                        db_column="MSQL_ID", primary_key=True, serialize=False
                    ),
                ),
                ("current_farm_id", models.IntegerField(blank=True, null=True)),
                ("original_farm_id", models.IntegerField(blank=True, null=True)),
                (
                    "enroll_date",
                    models.DateField(blank=True, db_column="Enroll Date", null=True),
                ),
                ("member_id", models.IntegerField(blank=True, null=True)),
                (
                    "salesweekend",
                    models.DateField(blank=True, db_column="SalesWeekEnd", null=True),
                ),
                (
                    "enrollment_documents",
                    models.CharField(db_column="Enrollment Documents", max_length=255),
                ),
                (
                    "cancel_date",
                    models.DateField(blank=True, db_column="Cancel Date", null=True),
                ),
                ("cancel_reason", models.CharField(max_length=255)),
                ("cancel_type", models.CharField(max_length=255)),
                ("cancel_source", models.CharField(max_length=20)),
                ("fname", models.CharField(db_column="FNAME", max_length=255)),
                ("lname", models.CharField(db_column="LNAME", max_length=255)),
                ("company", models.CharField(db_column="Company", max_length=255)),
                ("email", models.CharField(db_column="Email", max_length=255)),
                (
                    "email_status",
                    models.CharField(db_column="Email Status", max_length=255),
                ),
                ("paperless_opt_in", models.CharField(max_length=10)),
                ("language_pref", models.CharField(max_length=10)),
                ("phone", models.CharField(db_column="Phone", max_length=255)),
                (
                    "phone_type",
                    models.CharField(db_column="Phone Type", max_length=255),
                ),
                ("phone_2", models.CharField(db_column="Phone 2", max_length=255)),
                (
                    "service_address",
                    models.CharField(db_column="Service Address", max_length=255),
                ),
                (
                    "service_address_2",
                    models.CharField(db_column="Service Address 2", max_length=255),
                ),
                (
                    "service_city",
                    models.CharField(db_column="Service City", max_length=255),
                ),
                (
                    "service_state",
                    models.CharField(db_column="Service State", max_length=255),
                ),
                (
                    "service_zip",
                    models.CharField(db_column="Service Zip", max_length=255),
                ),
                (
                    "service_county",
                    models.CharField(
                        blank=True,
                        db_column="Service County",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "bill_address",
                    models.CharField(db_column="Bill Address", max_length=255),
                ),
                ("bill_city", models.CharField(db_column="Bill City", max_length=255)),
                (
                    "bill_state",
                    models.CharField(db_column="Bill State", max_length=255),
                ),
                ("bill_zip", models.CharField(db_column="Bill Zip", max_length=255)),
                (
                    "bill_county",
                    models.CharField(
                        blank=True, db_column="Bill County", max_length=255, null=True
                    ),
                ),
                ("utility", models.CharField(db_column="Utility", max_length=255)),
                ("esco", models.IntegerField()),
                ("zone", models.CharField(db_column="Zone", max_length=255)),
                (
                    "number_of_accounts",
                    models.CharField(db_column="Number of Accounts", max_length=255),
                ),
                (
                    "budget_bill",
                    models.CharField(db_column="Budget Bill", max_length=255),
                ),
                (
                    "account_number",
                    models.CharField(db_column="Account Number", max_length=255),
                ),
                ("pod_id", models.CharField(db_column="POD ID", max_length=255)),
                (
                    "utility_account_number",
                    models.CharField(
                        blank=True,
                        db_column="Utility_Account_Number",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "enrollment_id",
                    models.CharField(db_column="Enrollment ID", max_length=255),
                ),
                ("pe_status", models.CharField(db_column="PE_status", max_length=255)),
                (
                    "promo_code",
                    models.CharField(db_column="Promo Code", max_length=255),
                ),
                ("referral", models.CharField(db_column="Referral", max_length=255)),
                ("channel", models.CharField(db_column="Channel", max_length=255)),
                ("site", models.CharField(db_column="Site", max_length=255)),
                ("vendor", models.CharField(db_column="Vendor", max_length=255)),
                ("agent_id", models.CharField(db_column="Agent ID", max_length=255)),
                ("plan", models.CharField(db_column="Plan", max_length=255)),
                ("term", models.CharField(db_column="Term", max_length=255)),
                (
                    "product",
                    models.CharField(
                        blank=True, db_column="Product", max_length=80, null=True
                    ),
                ),
                (
                    "arr_amount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=8, null=True
                    ),
                ),
                (
                    "cap_rate",
                    models.FloatField(blank=True, db_column="Cap Rate", null=True),
                ),
                (
                    "payment_type",
                    models.CharField(db_column="Payment Type", max_length=255),
                ),
                (
                    "internal_exceptions",
                    models.CharField(db_column="Internal Exceptions", max_length=255),
                ),
                (
                    "payment_id",
                    models.CharField(db_column="Payment ID", max_length=255),
                ),
                (
                    "paymentprofileid",
                    models.CharField(db_column="PaymentProfileID", max_length=255),
                ),
                (
                    "customerprofileid",
                    models.CharField(db_column="CustomerProfileID", max_length=255),
                ),
                ("payment_profile_updated", models.DateField(blank=True, null=True)),
                ("code", models.CharField(max_length=10)),
                ("cc_zip", models.CharField(max_length=10)),
                ("tpv_id", models.CharField(db_column="TPV ID", max_length=255)),
                ("scored", models.CharField(db_column="Scored", max_length=255)),
                ("dob", models.DateField(blank=True, db_column="DOB", null=True)),
                ("fico", models.IntegerField(blank=True, db_column="FICO", null=True)),
                ("tec", models.IntegerField(blank=True, db_column="TEC", null=True)),
                ("bcs", models.IntegerField(blank=True, db_column="BCS", null=True)),
                ("payment_history", models.CharField(max_length=255)),
                (
                    "annual_volume",
                    models.IntegerField(
                        blank=True, db_column="Annual Volume", null=True
                    ),
                ),
                ("read_type", models.CharField(db_column="Read Type", max_length=255)),
                ("profile", models.CharField(max_length=255)),
                ("read_cycle", models.CharField(max_length=255)),
                ("service_class", models.CharField(max_length=255)),
                (
                    "revenue_class",
                    models.CharField(db_column="Revenue Class", max_length=255),
                ),
                (
                    "rate_category",
                    models.CharField(db_column="Rate Category", max_length=255),
                ),
                ("rate_category_original", models.CharField(max_length=255)),
                ("rate_class", models.CharField(blank=True, max_length=80, null=True)),
                (
                    "mtc_eligible",
                    models.CharField(db_column="MTC_Eligible", max_length=10),
                ),
                (
                    "bill_credit",
                    models.FloatField(blank=True, db_column="Bill Credit", null=True),
                ),
                ("survey_credit", models.FloatField(blank=True, null=True)),
                ("courtesy_credit", models.FloatField(blank=True, null=True)),
                (
                    "welcome_letter_sent",
                    models.DateField(
                        blank=True, db_column="Welcome Letter Sent", null=True
                    ),
                ),
                (
                    "promo_due",
                    models.FloatField(blank=True, db_column="Promo Due", null=True),
                ),
                ("welcome_letter_type", models.CharField(max_length=255)),
                ("reward_type", models.CharField(max_length=255)),
                (
                    "override_due",
                    models.FloatField(blank=True, db_column="Override Due", null=True),
                ),
                (
                    "override_paid",
                    models.DateField(blank=True, db_column="Override Paid", null=True),
                ),
                (
                    "override_agent",
                    models.CharField(db_column="Override Agent", max_length=255),
                ),
                (
                    "sfny_agent",
                    models.CharField(db_column="SFNY Agent", max_length=255),
                ),
                ("signature_required", models.CharField(max_length=255)),
                (
                    "organization",
                    models.CharField(db_column="Organization", max_length=255),
                ),
                (
                    "organization_payment",
                    models.FloatField(
                        blank=True, db_column="Organization Payment", null=True
                    ),
                ),
                (
                    "organization_paid",
                    models.DateField(
                        blank=True, db_column="Organization Paid", null=True
                    ),
                ),
                (
                    "sbc_location",
                    models.CharField(db_column="SBC Location", max_length=255),
                ),
                (
                    "ib_sr_location",
                    models.CharField(db_column="IB SR Location", max_length=255),
                ),
                (
                    "tpv_location",
                    models.CharField(db_column="TPV Location", max_length=255),
                ),
                (
                    "credit_report_location",
                    models.CharField(
                        db_column="Credit Report Location", max_length=255
                    ),
                ),
                (
                    "audit_status",
                    models.CharField(db_column="Audit Status", max_length=255),
                ),
                ("credits_start_date", models.DateField(blank=True, null=True)),
                ("usage_updated_on", models.DateTimeField(blank=True, null=True)),
                ("uuid", models.CharField(max_length=255)),
                ("phone_2_type", models.CharField(max_length=255)),
                ("billing_address_2", models.CharField(max_length=255)),
                ("allocation_score", models.CharField(max_length=5)),
                ("allocation_status", models.CharField(max_length=20)),
                ("autopay_hold_reason", models.CharField(max_length=255)),
                ("autopay_log_action_id", models.IntegerField(blank=True, null=True)),
                ("commission_volume", models.IntegerField(blank=True, null=True)),
                ("commission_allo_date", models.DateField(blank=True, null=True)),
                ("rooftop_solar", models.CharField(max_length=255)),
                ("ssn", models.CharField(max_length=255)),
                ("account_verified", models.CharField(max_length=255)),
                ("sent_to_developer_client", models.DateField(blank=True, null=True)),
                (
                    "confirmed_sale_by_developer",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "commission_paid_amount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("date_added", models.DateField(blank=True, null=True)),
                ("status", models.CharField(max_length=255)),
                ("energy_supplier", models.CharField(max_length=255)),
                ("annual_usage_dc", models.IntegerField(blank=True, null=True)),
                ("disclosure_form", models.CharField(max_length=255)),
                ("agreement", models.CharField(max_length=255)),
                ("notes", models.TextField(blank=True, null=True)),
                ("dg_customer", models.CharField(blank=True, max_length=3, null=True)),
                ("created_at", models.DateTimeField()),
                ("updated_at", models.DateTimeField()),
            ],
            options={
                "db_table": "MSTR CUSTLIST",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Payments",
            fields=[
                ("cust_id", models.IntegerField(blank=True, null=True)),
                ("member_id", models.IntegerField(blank=True, null=True)),
                ("farm_id", models.IntegerField(blank=True, null=True)),
                ("payment_method", models.CharField(max_length=20)),
                (
                    "payment_amount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=8, null=True
                    ),
                ),
                ("payment_date", models.DateField(blank=True, null=True)),
                ("batch", models.CharField(max_length=80)),
                ("payment_json", models.JSONField(blank=True, null=True)),
                ("api", models.CharField(max_length=20)),
                ("transaction_id", models.CharField(max_length=80)),
                ("brand", models.CharField(max_length=20)),
                ("last4", models.CharField(max_length=10)),
                ("check_number", models.CharField(max_length=10)),
                ("reason", models.CharField(max_length=80)),
                (
                    "msql_id",
                    models.AutoField(
                        db_column="MSQL_ID", primary_key=True, serialize=False
                    ),
                ),
                ("created_at", models.DateTimeField()),
                ("updated_at", models.DateTimeField()),
            ],
            options={
                "db_table": "payments",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Paymentstest",
            fields=[
                ("cust_id", models.IntegerField(blank=True, null=True)),
                ("member_id", models.IntegerField(blank=True, null=True)),
                ("farm_id", models.IntegerField(blank=True, null=True)),
                ("payment_method", models.CharField(max_length=20)),
                (
                    "payment_amount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=8, null=True
                    ),
                ),
                ("payment_date", models.DateField(blank=True, null=True)),
                ("batch", models.CharField(max_length=80)),
                ("payment_json", models.JSONField(blank=True, null=True)),
                ("api", models.CharField(max_length=20)),
                ("transaction_id", models.CharField(max_length=80)),
                ("brand", models.CharField(max_length=20)),
                ("last4", models.CharField(max_length=10)),
                ("check_number", models.CharField(max_length=10)),
                ("reason", models.CharField(max_length=80)),
                (
                    "msql_id",
                    models.AutoField(
                        db_column="MSQL_ID", primary_key=True, serialize=False
                    ),
                ),
                ("created_at", models.DateTimeField()),
                ("updated_at", models.DateTimeField()),
            ],
            options={
                "db_table": "paymentstest",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PaymentTransactions",
            fields=[
                ("payment_id", models.IntegerField(blank=True, null=True)),
                ("cust_id", models.IntegerField(blank=True, null=True)),
                ("invoice_id", models.IntegerField(blank=True, null=True)),
                (
                    "amount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=8, null=True
                    ),
                ),
                ("reason", models.CharField(max_length=80)),
                (
                    "msql_id",
                    models.AutoField(
                        db_column="MSQL_ID", primary_key=True, serialize=False
                    ),
                ),
                (
                    "ach_tran_id",
                    models.CharField(db_column="ACH_tran_id", max_length=255),
                ),
                ("created_at", models.DateTimeField()),
                ("updated_at", models.DateTimeField()),
            ],
            options={
                "db_table": "payment_transactions",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ProspectIdMstr",
            fields=[
                (
                    "msql_id",
                    models.AutoField(
                        db_column="MSQL_ID", primary_key=True, serialize=False
                    ),
                ),
                ("prosp_id", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "developer",
                    models.CharField(
                        blank=True, db_column="Developer", max_length=255, null=True
                    ),
                ),
                (
                    "purchase_number",
                    models.CharField(
                        blank=True,
                        db_column="Purchase Number",
                        max_length=255,
                        null=True,
                    ),
                ),
                ("date", models.DateTimeField(blank=True, db_column="Date", null=True)),
                ("updated_at", models.DateTimeField()),
                ("created_at", models.DateTimeField()),
            ],
            options={
                "db_table": "prospect_id_MSTR",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="StatusTest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("accountnumber", models.IntegerField(blank=True, null=True)),
                (
                    "newlmi_status",
                    models.CharField(
                        blank=True, db_column="newLMI_status", max_length=255, null=True
                    ),
                ),
                ("datechanged", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "status_test",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="SuppressionList",
            fields=[
                ("cust_id", models.IntegerField(blank=True, null=True)),
                ("type", models.CharField(max_length=80)),
                ("reason", models.CharField(max_length=255)),
                ("start_date", models.DateField(blank=True, null=True)),
                ("end_date", models.DateField(blank=True, null=True)),
                ("entered_by", models.CharField(max_length=80)),
                (
                    "msql_id",
                    models.AutoField(
                        db_column="MSQL_ID", primary_key=True, serialize=False
                    ),
                ),
                ("created_at", models.DateTimeField()),
                ("updated_at", models.DateTimeField()),
            ],
            options={
                "db_table": "suppression_list",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="SyncarphaAccountContract",
            fields=[
                (
                    "msql_id",
                    models.AutoField(
                        db_column="MSQL_ID", primary_key=True, serialize=False
                    ),
                ),
                ("contact_id", models.IntegerField(blank=True, null=True)),
                ("account_id", models.IntegerField(blank=True, null=True)),
                ("contract_id", models.IntegerField(blank=True, null=True)),
                ("member_id", models.IntegerField(blank=True, null=True)),
                ("cust_id", models.IntegerField(blank=True, null=True)),
                ("created_at", models.DateTimeField()),
                ("updated_at", models.DateTimeField()),
            ],
            options={
                "db_table": "syncarpha_account_contract",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="SyncarphaContactAccount",
            fields=[
                (
                    "msql_id",
                    models.AutoField(
                        db_column="MSQL_ID", primary_key=True, serialize=False
                    ),
                ),
                ("contact_id", models.IntegerField(blank=True, null=True)),
                ("account_id", models.IntegerField(blank=True, null=True)),
                ("contract_id", models.IntegerField(blank=True, null=True)),
                ("member_id", models.IntegerField(blank=True, null=True)),
                ("cust_id", models.IntegerField(blank=True, null=True)),
                ("created_at", models.DateTimeField()),
                ("updated_at", models.DateTimeField()),
            ],
            options={
                "db_table": "syncarpha_contact_account",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Treatables",
            fields=[
                ("market", models.CharField(db_column="market", max_length=255)),
                (
                    "customer_id",
                    models.IntegerField(
                        db_column="customer_id", primary_key=True, serialize=False
                    ),
                ),
                (
                    "first_name",
                    models.CharField(db_column="first_name", max_length=255),
                ),
                ("last_name", models.CharField(db_column="last_name", max_length=255)),
                (
                    "account_number",
                    models.CharField(db_column="account_number", max_length=255),
                ),
                (
                    "pending_reason",
                    models.CharField(db_column="pending_reason", max_length=255),
                ),
                (
                    "third_party_verification",
                    models.CharField(
                        db_column="third_party_verification", max_length=255
                    ),
                ),
                ("fico", models.IntegerField(db_column="fico")),
                (
                    "lmi_status",
                    models.CharField(db_column="lmi_status", max_length=255),
                ),
                (
                    "account_verified",
                    models.CharField(db_column="account_verified", max_length=255),
                ),
            ],
            options={
                "db_table": "treatables",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UsZips",
            fields=[
                (
                    "zip",
                    models.CharField(max_length=5, primary_key=True, serialize=False),
                ),
                ("city_name", models.CharField(blank=True, max_length=80, null=True)),
                ("state_code", models.CharField(blank=True, max_length=2, null=True)),
                ("state_name", models.CharField(blank=True, max_length=80, null=True)),
                ("county_name", models.CharField(blank=True, max_length=80, null=True)),
            ],
            options={
                "db_table": "us_zips",
                "managed": False,
            },
        ),
    ]
